[{"/Users/cavliucigor/Desktop/batman-client/src/index.tsx":"1","/Users/cavliucigor/Desktop/batman-client/src/App.tsx":"2","/Users/cavliucigor/Desktop/batman-client/src/Redux/store.js":"3","/Users/cavliucigor/Desktop/batman-client/src/Redux/Products/productSlice.js":"4","/Users/cavliucigor/Desktop/batman-client/src/Redux/Navigation/navigationSlice.js":"5","/Users/cavliucigor/Desktop/batman-client/src/Redux/User/userSlice.js":"6","/Users/cavliucigor/Desktop/batman-client/src/Redux/AddPost/createPostSlice.js":"7","/Users/cavliucigor/Desktop/batman-client/src/server/index.js":"8","/Users/cavliucigor/Desktop/batman-client/src/Companent/Navbar/index.tsx":"9","/Users/cavliucigor/Desktop/batman-client/src/Companent/SignIn/index.tsx":"10","/Users/cavliucigor/Desktop/batman-client/src/Companent/Product/index.tsx":"11","/Users/cavliucigor/Desktop/batman-client/src/Companent/Profile/index.tsx":"12","/Users/cavliucigor/Desktop/batman-client/src/Companent/SignUp/index.tsx":"13","/Users/cavliucigor/Desktop/batman-client/src/Companent/AddPost/index.tsx":"14","/Users/cavliucigor/Desktop/batman-client/src/Companent/Body/index.tsx":"15","/Users/cavliucigor/Desktop/batman-client/src/ui/index.js":"16","/Users/cavliucigor/Desktop/batman-client/src/ui/CategoriesItem/index.tsx":"17","/Users/cavliucigor/Desktop/batman-client/src/ui/InputMedia/index.js":"18","/Users/cavliucigor/Desktop/batman-client/src/ui/NavigationList/index.tsx":"19","/Users/cavliucigor/Desktop/batman-client/src/ui/ProductCard/index.tsx":"20","/Users/cavliucigor/Desktop/batman-client/src/ui/MainTitle/index.tsx":"21","/Users/cavliucigor/Desktop/batman-client/src/ui/NavigationProfile/index.tsx":"22","/Users/cavliucigor/Desktop/batman-client/src/ui/FAQ/index.tsx":"23","/Users/cavliucigor/Desktop/batman-client/src/ui/Banner/index.tsx":"24","/Users/cavliucigor/Desktop/batman-client/src/ui/Input/index.tsx":"25","/Users/cavliucigor/Desktop/batman-client/src/ui/Button/index.tsx":"26","/Users/cavliucigor/Desktop/batman-client/src/ui/Benefits/index.tsx":"27","/Users/cavliucigor/Desktop/batman-client/src/ui/BenefitItem/index.tsx":"28","/Users/cavliucigor/Desktop/batman-client/src/ui/Select/index.tsx":"29","/Users/cavliucigor/Desktop/batman-client/src/ui/TextArea/index.tsx":"30","/Users/cavliucigor/Desktop/batman-client/src/ui/NavigationList/NavigationItem/index.tsx":"31","/Users/cavliucigor/Desktop/batman-client/src/svg/atach.tsx":"32"},{"size":492,"mtime":1684167844560,"results":"33","hashOfConfig":"34"},{"size":2851,"mtime":1684744305865,"results":"35","hashOfConfig":"34"},{"size":413,"mtime":1684743883508,"results":"36","hashOfConfig":"34"},{"size":436,"mtime":1678345435029,"results":"37","hashOfConfig":"34"},{"size":462,"mtime":1678620277896,"results":"38","hashOfConfig":"34"},{"size":408,"mtime":1678364679277,"results":"39","hashOfConfig":"34"},{"size":746,"mtime":1684746172345,"results":"40","hashOfConfig":"34"},{"size":1229,"mtime":1685736922715,"results":"41","hashOfConfig":"34"},{"size":1537,"mtime":1684703145829,"results":"42","hashOfConfig":"34"},{"size":3066,"mtime":1684671480694,"results":"43","hashOfConfig":"34"},{"size":1251,"mtime":1684742410134,"results":"44","hashOfConfig":"34"},{"size":717,"mtime":1685533265292,"results":"45","hashOfConfig":"34"},{"size":2947,"mtime":1684671465103,"results":"46","hashOfConfig":"34"},{"size":7048,"mtime":1685688816660,"results":"47","hashOfConfig":"34"},{"size":583,"mtime":1684703539295,"results":"48","hashOfConfig":"34"},{"size":799,"mtime":1685479059272,"results":"49","hashOfConfig":"34"},{"size":1001,"mtime":1684743417042,"results":"50","hashOfConfig":"34"},{"size":2946,"mtime":1685462131708,"results":"51","hashOfConfig":"34"},{"size":1090,"mtime":1685733213809,"results":"52","hashOfConfig":"34"},{"size":1090,"mtime":1685479485330,"results":"53","hashOfConfig":"34"},{"size":241,"mtime":1684686728487,"results":"54","hashOfConfig":"34"},{"size":1072,"mtime":1684226380356,"results":"55","hashOfConfig":"34"},{"size":2162,"mtime":1684701555469,"results":"56","hashOfConfig":"34"},{"size":5761,"mtime":1684671856612,"results":"57","hashOfConfig":"34"},{"size":958,"mtime":1685019342687,"results":"58","hashOfConfig":"34"},{"size":883,"mtime":1684671740637,"results":"59","hashOfConfig":"34"},{"size":4111,"mtime":1684701526450,"results":"60","hashOfConfig":"34"},{"size":1639,"mtime":1685025498498,"results":"61","hashOfConfig":"34"},{"size":10234,"mtime":1685479485324,"results":"62","hashOfConfig":"34"},{"size":285,"mtime":1685479271967,"results":"63","hashOfConfig":"34"},{"size":804,"mtime":1685733301108,"results":"64","hashOfConfig":"34"},{"size":2009,"mtime":1685387485153,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"1g94pun",{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"69"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"69"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"69"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"69"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"69"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"69"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"69"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"69"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"69"},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"/Users/cavliucigor/Desktop/batman-client/src/index.tsx",[],[],[],"/Users/cavliucigor/Desktop/batman-client/src/App.tsx",["173","174"],[],"import React, { useEffect, useState } from \"react\";\nimport { Routes, Route, useLocation, Navigate } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\";\nimport { getAllUser } from \"./Redux/User/userSlice\";\nimport { getUser } from \"./server\";\nimport Body from \"./Companent/Body\";\n\nimport Navbar from \"./Companent/Navbar\";\nimport Product from \"./Companent/Product\";\nimport Profile from \"./Companent/Profile\";\nimport SignIn from \"./Companent/SignIn\";\nimport SignUp from \"./Companent/SignUp\";\nimport \"./clear.css\";\nimport \"./index.css\";\nimport AddPost from \"./Companent/AddPost\";\nimport { setAllNavigation } from \"./Redux/Navigation/navigationSlice\";\n\nexport const AuthorisedAccount = ({ component }: any) => {\n  const login = sessionStorage.getItem(\"users\") ?? \"\";\n  return login ? (\n    <div className=\"batman-store\">\n      <Navbar />\n      {component}\n    </div>\n  ) : (\n    <Navigate to={\"/signin\"} />\n  );\n};\nexport const NotAuthorisedAccount = ({ component }: any) => {\n  const login = sessionStorage.getItem(\"users\") ?? \"\";\n\n  return (\n    <div className=\"batman-store\">\n      {!login ? component : <Navigate to={\"/\"} />}\n    </div>\n  );\n};\n\nfunction App({ user, getAllUser }: any) {\n  const location = useLocation();\n\n  const sectionPath = location?.pathname?.split(\"section\")?.[1]?.split(\"/\")[1];\n\n  useEffect(() => {\n    const dataString = sessionStorage.getItem(\"users\") ?? \"\";\n    const data = JSON.parse(dataString || \"[]\")[0];\n    if (data) {\n      if (!(new Date().getTime() < data.expires)) {\n        sessionStorage.removeItem(\"users\");\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    const dataString = sessionStorage.getItem(\"users\");\n    if (dataString) {\n      const user = JSON.parse(dataString)[0];\n      getUser(user?.login, user?.password).then((res) => {\n        if (res) {\n          getAllUser(res);\n        }\n      });\n    }\n  }, [getAllUser]);\n\n  return (\n    <div className=\"batman-store\">\n      <Routes>\n        <Route\n          path=\"/signin\"\n          element={<NotAuthorisedAccount component={<SignIn />} />}\n        />\n        <Route\n          path=\"/signup\"\n          element={<NotAuthorisedAccount component={<SignUp />} />}\n        />\n\n        <Route path=\"/\" element={<AuthorisedAccount component={<Body />} />} />\n        <Route\n          path=\"/profile\"\n          element={<AuthorisedAccount component={<Profile />} />}\n        />\n        <Route\n          path=\"/create-post\"\n          element={<AuthorisedAccount component={<AddPost />} />}\n        />\n        <Route\n          path={\"/section/\" + sectionPath}\n          element={\n            <AuthorisedAccount component={<Product name={sectionPath} />} />\n          }\n        />\n      </Routes>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state: any) => ({\n  user: state?.userSlice,\n});\n\nexport default connect(mapStateToProps, { getAllUser })(App);\n","/Users/cavliucigor/Desktop/batman-client/src/Redux/store.js",[],[],[],"/Users/cavliucigor/Desktop/batman-client/src/Redux/Products/productSlice.js",[],[],"/Users/cavliucigor/Desktop/batman-client/src/Redux/Navigation/navigationSlice.js",[],[],"/Users/cavliucigor/Desktop/batman-client/src/Redux/User/userSlice.js",[],[],"/Users/cavliucigor/Desktop/batman-client/src/Redux/AddPost/createPostSlice.js",[],[],"/Users/cavliucigor/Desktop/batman-client/src/server/index.js",[],[],"/Users/cavliucigor/Desktop/batman-client/src/Companent/Navbar/index.tsx",[],[],"/Users/cavliucigor/Desktop/batman-client/src/Companent/SignIn/index.tsx",["175","176","177"],[],"import React, { useCallback } from \"react\";\nimport \"./SignIn.scss\";\nimport { Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { connect } from \"react-redux\";\nimport { getAllUser } from \"../../Redux/User/userSlice\";\nimport { getUser } from \"../../server\";\nimport { Button } from \"../../ui\";\nconst AsigAdmin = require(\"../ico/mainlogo.png\");\n\ntype FormValues = {\n  login: string;\n  password: string;\n};\n\ntype SignInProps = {\n  getAllUser: (res: any) => void;\n};\n\nconst SignIn: React.FC<SignInProps> = ({ getAllUser }) => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<FormValues>({\n    mode: \"onChange\",\n  });\n\n  const onSubmit = useCallback(\n    async (data: FormValues) => {\n      try {\n        const res = await getUser(data?.login, data?.password);\n        getAllUser(res);\n\n        const dataUser = {\n          login: data?.login,\n          password: data?.password,\n          expires: new Date().getTime() + 5000,\n        };\n\n        if (!sessionStorage.getItem(\"users\")) {\n          sessionStorage.setItem(\"users\", JSON.stringify(dataUser));\n          window.location.href = \"/\";\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    [getAllUser]\n  );\n\n  return (\n    <div className=\"batman-ui--sign-in-content content \">\n      <form onSubmit={handleSubmit(onSubmit)} className=\"batman-ui--form\">\n        <h1>Sign In</h1>\n        <input\n          {...register(\"login\", {\n            required: \"Login is a required field!\",\n            pattern: {\n              value:\n                /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/,\n              message: \"Please enter a valid login.\",\n            },\n          })}\n          type=\"login\"\n          placeholder=\"Login\"\n        />\n        {errors?.login && (\n          <div style={{ color: \"#3a48f5\" }}>*{errors.login.message}</div>\n        )}\n        <input\n          {...register(\"password\", {\n            required: \"Password is a required field!\",\n            pattern: {\n              value:\n                /(?=.*[0-9])(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z!@#$%^&*]{6,}/g,\n              message:\n                \"Please enter a valid password. It should contain at least one number, one special character, at least one Latin letter in lower case, at least one uppercase Latin letter, and should consist of at least 6 of the above.\",\n            },\n          })}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        {errors?.password && (\n          <div style={{ color: \"#3a48f5\" }}>*{errors.password.message}</div>\n        )}\n        <div className=\"batman-ui--submit-button\">\n          <Button children=\"Submit\" />\n          <Link to=\"/signup\"> Sign Up</Link>\n        </div>\n      </form>\n      <div className=\"batman-ui--sign-in-image\">\n        <img src={AsigAdmin} alt=\"AsigAdmin\" />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: any) => ({\n  user: state?.userSlice,\n});\n\nexport default connect(mapStateToProps, { getAllUser })(SignIn);\n","/Users/cavliucigor/Desktop/batman-client/src/Companent/Product/index.tsx",["178"],[],"import { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport { MainTitle, ProductCard } from \"../../ui\";\nimport { getAllProduct } from \"../../Redux/Products/productSlice\";\nimport { IProduct } from \"../../type\";\nimport { getAllProducts } from \"../../server\";\nimport \"./style/index.scss\";\n\ninterface Props {\n  items: IProduct[];\n  getAllProduct: (e: any) => void;\n  name: string;\n}\n\nconst Product = ({ items, getAllProduct, name }: Props) => {\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await getAllProducts(name);\n      getAllProduct(res);\n    };\n    fetchData();\n  }, [getAllProduct, location?.pathname]);\n\n  return (\n    <div className=\"batman-store_product-list\">\n      <MainTitle>{` According to your request, we found the following ${name?.toUpperCase()}`}</MainTitle>\n      <div className=\"batman-store_product-list-wrapper\">\n        {items?.map((item, i) => {\n          return <ProductCard {...item} key={i} />;\n        })}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: any) => ({\n  items: state?.productSlice?.items,\n});\n\nexport default connect(mapStateToProps, { getAllProduct })(Product);\n","/Users/cavliucigor/Desktop/batman-client/src/Companent/Profile/index.tsx",[],[],"/Users/cavliucigor/Desktop/batman-client/src/Companent/SignUp/index.tsx",["179","180","181"],[],"import React from \"react\";\nimport \"./index.scss\";\nimport { Link } from \"react-router-dom\";\nimport { useForm, SubmitHandler } from \"react-hook-form\";\nimport { Button } from \"../../ui\";\n\nconst AsigAdmin = require(\"../ico/mainlogo.png\");\n\ntype FormData = {\n  name: string;\n  lastName: string;\n  email: string;\n  password: string;\n};\n\nfunction SignUp() {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n  } = useForm<FormData>({\n    mode: \"onChange\",\n  });\n\n  const onSubmit: SubmitHandler<FormData> = (data) => {\n    // console.log(data);\n    reset();\n  };\n\n  return (\n    <div className=\"batman-ui--sign-up-content content\">\n      <form onSubmit={handleSubmit(onSubmit)} className=\"form\">\n        <h1>Sign Up</h1>\n        {/* Name */}\n        <input\n          {...register(\"name\", {\n            required: \"Name is require field!\",\n          })}\n          type=\"text\"\n          placeholder=\"Name\"\n        />{\" \"}\n        {errors?.name && (\n          <div style={{ color: \"#3a48f5\" }}>*{errors.name.message}</div>\n        )}\n        {/* Last Name */}\n        <input\n          {...register(\"lastName\", {\n            required: \"Last Name is require field!\",\n          })}\n          type=\"text\"\n          placeholder=\"Last Name\"\n        />{\" \"}\n        {errors?.lastName && (\n          <div style={{ color: \"#3a48f5\" }}>*{errors.lastName.message}</div>\n        )}\n        {/* Email */}\n        <input\n          {...register(\"email\", {\n            required: \"Email is require field!\",\n            pattern: {\n              value:\n                /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/,\n              message: \"Please enter valid email\",\n            },\n          })}\n          type=\"email\"\n          placeholder=\"Email\"\n        />{\" \"}\n        {errors?.email && (\n          <div style={{ color: \"#3a48f5\" }}>*{errors.email.message}</div>\n        )}\n        {/* password  */}\n        <input\n          {...register(\"password\", {\n            required: \"Password is require field!\",\n            pattern: {\n              value:\n                /(?=.*[0-9])(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z!@#$%^&*]{6,}/g,\n              message:\n                \"Please enter valid email. String contains at least one number, one special character, at least one Latin letter in lower case, at least one uppercase latin letter, string consists of at least 6 of the above.\",\n            },\n          })}\n          type=\"password\"\n          placeholder=\"Password\"\n        />{\" \"}\n        {errors?.password && (\n          <div style={{ color: \"#3a48f5\" }}>*{errors.password.message}</div>\n        )}\n        <div className=\"batman-ui--submit-button\">\n          <Button children=\"Submit\" />\n          <Link to=\"/signin\">Sign In</Link>\n        </div>\n      </form>\n      <div className=\"batman-ui--sign-up-image\">\n        <img src={AsigAdmin} alt=\"Sign In\" />\n      </div>\n    </div>\n  );\n}\n\nexport default SignUp;\n","/Users/cavliucigor/Desktop/batman-client/src/Companent/AddPost/index.tsx",["182","183"],[],"import \"./index.scss\";\nimport { Input, InputMedia, MainTitle, Select, TextArea } from \"../../ui\";\nimport { useEffect } from \"react\";\nimport { addPost, getAllCategories } from \"../../server/index.js\";\nimport CategoriesItem from \"../../ui/CategoriesItem\";\nimport { connect } from \"react-redux\";\nimport { Field, Formik, Form } from \"formik\";\n\nimport {\n  setAllCategory,\n  setCurrentCategory,\n} from \"../../Redux/AddPost/createPostSlice\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nconst AddPost = ({\n  allCategory,\n  currentCategory,\n  setAllCategory,\n  setCurrentCategory,\n}: any) => {\n  useEffect(() => {\n    getAllCategories().then((res) => setAllCategory(res));\n  }, []);\n  const navigate = useNavigate();\n\n  const initialValues = currentCategory?.form?.reduce(\n    (acc: any, item: any) => {\n      if (Array.isArray(item)) {\n        item.forEach((subItem) => {\n          acc[subItem.code] = \"\";\n        });\n      } else {\n        acc[item.code] = \"\";\n      }\n      return acc;\n    },\n    { category: currentCategory?.code }\n  );\n\n  const handleSubmit = (values: any) => {\n    addPost(values).then((res: any) => {\n      if (res.statusText === \"OK\") {\n        navigate(\"/\");\n      }\n    });\n  };\n\n  return (\n    <div className=\"batman-store__create-post\">\n      <div onClick={() => setCurrentCategory({})}>\n        <MainTitle\n          children={`Create an ad ${\n            currentCategory?.name\n              ? \"in the section: \" + currentCategory?.name\n              : null\n          }`}\n        />\n      </div>\n\n      {Object.keys(currentCategory)?.length ? (\n        <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n          <Form className=\"batman-store__create-post_form\">\n            {currentCategory?.form?.length ? (\n              currentCategory?.form?.map((item: any, i: number) => {\n                return (\n                  <div key={i} className=\"batman-store__create-post_form-row\">\n                    {Array.isArray(item) ? (\n                      <div className=\"batman-store__create-post_form-row-flex\">\n                        {item.map((subItem: any, j: number) => {\n                          return subItem.type === \"input\" ? (\n                            <div\n                              key={j}\n                              className=\"batman-store__create-post_form-row-flex-item\"\n                            >\n                              <label htmlFor={subItem.code}>\n                                {subItem.name}\n                              </label>\n                              {/*<Field*/}\n                              {/*  id={subItem.code}*/}\n                              {/*  name={subItem.code}*/}\n                              {/*  type=\"text\"*/}\n                              {/*/>*/}\n\n                              <Field\n                                id={subItem.code}\n                                name={subItem.code}\n                                type={subItem.subtype ?? \"text\"}\n                              />\n                            </div>\n                          ) : subItem.type === \"textarea\" ? (\n                            <Field\n                              name={subItem.code}\n                              component={TextArea}\n                              placeholder=\"Select an option\"\n                              valuesName={subItem.code}\n                            />\n                          ) : (\n                            <div\n                              key={j}\n                              className=\"batman-store__create-post_form-row-flex-item\"\n                            >\n                              <label htmlFor={subItem.code}>\n                                {subItem.name}\n                              </label>\n                              <Field\n                                name={subItem.code}\n                                component={Select}\n                                options={subItem?.option}\n                                placeholder=\"Select an option\"\n                                valuesName={subItem.code}\n                              />\n                            </div>\n                          );\n                        })}\n                      </div>\n                    ) : (\n                      <>\n                        <label htmlFor={item.code}>{item.name}</label>\n                        {item.type === \"input\" ? (\n                          <Field\n                            id={item.code}\n                            name={item.code}\n                            type={item.subtype ?? \"text\"}\n                          />\n                        ) : item.type === \"textarea\" ? (\n                          <Field\n                            name={item.code}\n                            component={TextArea}\n                            placeholder=\"Select an option\"\n                            valuesName={item.code}\n                          />\n                        ) : item.type === \"images\" ? (\n                          <Field\n                            name={item.code}\n                            component={InputMedia}\n                            valuesName={item.code}\n                          />\n                        ) : (\n                          <Field\n                            name={item.code}\n                            component={Select}\n                            options={item?.option}\n                            placeholder=\"Select an option\"\n                            valuesName={item.code}\n                          />\n                        )}\n                      </>\n                    )}\n                  </div>\n                );\n              })\n            ) : (\n              <p>Not have form</p>\n            )}\n            {currentCategory?.form?.length ? (\n              <button type=\"submit\">Submit</button>\n            ) : (\n              <Link onClick={() => setCurrentCategory({})} to={\"/\"}>\n                <button>Go to home</button>\n              </Link>\n            )}\n          </Form>\n        </Formik>\n      ) : (\n        <>\n          <p>Choose one of the following categories</p>\n          <h4>\n            *Attention! You may not find a category in this list that matches\n            the type of your ad. If you would like to post an ad that does not\n            qualify for a specific topic, please report it to technical support.\n          </h4>\n          <div className=\"batman-store__create-post_categories-list\">\n            {(allCategory ?? []).map((item: any, i: number) => {\n              return (\n                <div onClick={() => setCurrentCategory(item)} key={i}>\n                  <CategoriesItem key={i} data={item} />{\" \"}\n                </div>\n              );\n            })}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: any) => ({\n  allCategory: state?.createPostSlice?.allCategory,\n  currentCategory: state?.createPostSlice?.currentCategory,\n});\n\nexport default connect(mapStateToProps, {\n  setCurrentCategory,\n  setAllCategory,\n})(AddPost);\n","/Users/cavliucigor/Desktop/batman-client/src/Companent/Body/index.tsx",[],[],"/Users/cavliucigor/Desktop/batman-client/src/ui/index.js",[],[],"/Users/cavliucigor/Desktop/batman-client/src/ui/CategoriesItem/index.tsx",["184","185"],[],"import \"./index.scss\";\nimport { Link } from \"react-router-dom\";\n\ninterface CategoriesItemType {\n  data: {\n    _id: string;\n    name: string;\n    description: string;\n    code: string;\n  };\n}\nconst CategoriesItem = ({ data }: CategoriesItemType) => {\n  const { name, description, code } = data;\n  return (\n    <div className=\"batman-store--categories-item\">\n      <div className=\"batman-store--categories-item_container\">\n        <h1>{name}</h1>\n        <h2 title={description}>{description}</h2>\n      </div>\n      <div className=\"batman-store--categories-item_img\">\n        <svg\n          width=\"12\"\n          height=\"32\"\n          viewBox=\"0 0 12 32\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M1 1L11 16L1 31\"\n            stroke=\"currentColor\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n          />\n        </svg>\n      </div>\n    </div>\n  );\n};\n\nexport default CategoriesItem;\n","/Users/cavliucigor/Desktop/batman-client/src/ui/InputMedia/index.js",[],[],"/Users/cavliucigor/Desktop/batman-client/src/ui/NavigationList/index.tsx",["186"],[],"/Users/cavliucigor/Desktop/batman-client/src/ui/ProductCard/index.tsx",[],[],"/Users/cavliucigor/Desktop/batman-client/src/ui/MainTitle/index.tsx",[],[],"/Users/cavliucigor/Desktop/batman-client/src/ui/NavigationProfile/index.tsx",["187"],[],"// import AvatarIco from '../img/avatar 1.svg'\n// import ArrowIco from '../img/small-right.svg'\nimport { Link } from \"react-router-dom\";\nimport \"./style/index.scss\";\nimport {connect} from \"react-redux\";\nimport {getAllUser} from \"../../Redux/User/userSlice\";\n\ninterface NavigationProfileType{\n  user:any\n}\n\n\n\nconst NavigationProfile = ({user}:NavigationProfileType) => {\nconst {name, lastname, root,img} =user?.user[0]\n  return (\n      <Link to='/profile' >\n    <div className=\"batman-store__header-profile\">\n      <div className=\"batman-store__header-profile-img\">\n      <img src={img} alt=\"AvatarIco\"/>\n      </div>\n      <div className=\"batman-store__header-profile_name-status\">\n        <p className=\"batman-store__header-profile_name\">{lastname} {name} </p>\n        <p className=\"batman-store__header-profile_status\">{root} account</p>\n      </div>\n      {/*<img src={ArrowIco} alt=\"ArrowIco\"/>*/}\n    </div>\n    </Link >\n  );\n};\n\n\n\nconst mapStateToProps = (state: any) => ({\n  user: state?.userSlice,\n});\n\nexport default connect(mapStateToProps, )(NavigationProfile);","/Users/cavliucigor/Desktop/batman-client/src/ui/FAQ/index.tsx",[],[],"/Users/cavliucigor/Desktop/batman-client/src/ui/Banner/index.tsx",[],[],"/Users/cavliucigor/Desktop/batman-client/src/ui/Input/index.tsx",["188","189"],[],"import React, { ChangeEvent, useCallback, useEffect, useState } from \"react\";\nimport \"./style/index.scss\";\nconst ClassNames = require(\"classnames\");\n\ninterface IInputType {\n  className?: any;\n  placeholder?: string | undefined;\n  value?: string;\n  onChange?: (v: any, e?: ChangeEvent<HTMLInputElement>) => void;\n  changeError?: (e: any) => void;\n  disabled?: boolean;\n}\n\nconst Input = ({\n  className: _className,\n  placeholder,\n  value,\n  disabled = false,\n}: IInputType) => {\n  const className = ClassNames(\"agent-ui-input\", {\n    \"agent-ui-input--active\": !disabled,\n    [_className]: _className,\n  });\n\n  const handleChange = useCallback(() => {}, []);\n  return (\n    <div className=\"agent-ui-input--wrapper\">\n      <div className={className}>\n        <input\n          placeholder={placeholder}\n          value={value || \"\"}\n          onChange={handleChange}\n          disabled={disabled}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Input;\n","/Users/cavliucigor/Desktop/batman-client/src/ui/Button/index.tsx",[],[],"/Users/cavliucigor/Desktop/batman-client/src/ui/Benefits/index.tsx",[],[],"/Users/cavliucigor/Desktop/batman-client/src/ui/BenefitItem/index.tsx",[],[],"/Users/cavliucigor/Desktop/batman-client/src/ui/Select/index.tsx",["190","191","192","193"],[],"import { useState, useRef, useEffect, useCallback, ChangeEvent } from \"react\";\nimport ClassName from \"classnames\";\nimport \"./index.scss\";\n\ninterface IOption {\n  id: string;\n  src?: string;\n  value: string;\n}\n\ninterface IOptionType {\n  option: IOption;\n  active: boolean;\n  subType?: string;\n  selected: boolean;\n  onChange: (e: IOption) => void;\n  setCheckboxValue?: (e: any) => void;\n}\n\nconst Option = ({\n  subType,\n  option,\n  active,\n  selected,\n  onChange,\n  setCheckboxValue,\n}: any) => {\n  const optionItem = useRef<HTMLDivElement | null>(null);\n\n  const className = ClassName(\"batman-store-ui-select--option\", {\n    \"batman-store-ui-select--option--active\": active,\n    \"batman-store-ui-select--option--selected\": selected,\n  });\n\n  const handleChange = useCallback(() => {\n    if (onChange && option) {\n      onChange(option);\n    }\n  }, [onChange, option]);\n\n  const handleKeyWindow = useCallback(\n    (e: KeyboardEvent) => {\n      const enter = e.keyCode === 13;\n      const space = e.keyCode === 32;\n\n      if (active && (enter || space)) {\n        handleChange();\n      }\n    },\n    [active, handleChange]\n  );\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", handleKeyWindow);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyWindow);\n    };\n  }, [handleKeyWindow]);\n\n  useEffect(() => {\n    const node = optionItem.current;\n\n    if (node && active) {\n      const parent = node.closest(\".batman-store-ui-select--options\");\n\n      if (parent) {\n        const heightParent = node?.offsetHeight;\n        const parentOffsetTopWindow = parent.getBoundingClientRect().top;\n\n        const itemHeight = node.offsetHeight;\n        const itemOffsetTopWindow = node.getBoundingClientRect().top;\n\n        if (\n          itemOffsetTopWindow + itemHeight >\n          heightParent + parentOffsetTopWindow\n        ) {\n          parent.scrollTo(0, node.offsetTop - (heightParent - itemHeight - 10));\n        }\n\n        if (itemOffsetTopWindow < parentOffsetTopWindow) {\n          parent.scrollTo(0, node.offsetTop);\n        }\n      }\n    }\n  }, [active, optionItem]);\n\n  // const handleCheckboxChange = (option) => {\n  //   setCheckboxValue((prevValue) => [\n  //     ...prevValue.slice(0, option.id - 2),\n  //     { ...option, check: !option.check },\n  //     ...prevValue.slice(option.id),\n  //   ]);\n  // };\n  return (\n    <div\n      ref={optionItem}\n      className={className}\n      key={option?.code}\n      onClick={handleChange}\n    >\n      <span>{option?.name}</span>\n    </div>\n  );\n};\n\ninterface ISelectType {\n  index?: string;\n  theme?: string;\n  type?: string;\n  placeholder?: string;\n  searchValue?: string;\n  message?: string;\n  onBlur?: (e: string) => void | null;\n  onChangeSearch?: (e: string) => void;\n  value?: {\n    id?: string;\n    src?: string;\n    value?: string;\n  } | null;\n  options?: IOption[];\n  onChange?: (e: IOption | null) => void | null;\n  className?: any;\n  disabled?: boolean;\n  // disabledClick?:()=>void,\n  loading?: boolean;\n  error?: boolean;\n  noOption?: string;\n  unit?: string;\n  subType?: string;\n  setCheckboxValue?: (e: any) => void;\n}\n\nconst Select = ({\n  index,\n  theme,\n  type = \"select\",\n  placeholder = \"\",\n  searchValue = \"\",\n  message,\n  onBlur,\n  onChangeSearch,\n  value,\n  options,\n  onChange,\n  className: _className,\n  disabled,\n  // disabledClick,\n  loading = false,\n  error,\n  unit,\n  subType,\n  noOption = \"No options\",\n  field,\n  form,\n  valuesName,\n}: any) => {\n  const select = useRef<HTMLInputElement | null>(null);\n\n  const [open, setOpen] = useState(false);\n  const [focus, setFocus] = useState(false);\n  const [selectGray, setSelectGray] = useState(false);\n  const [keyIndex, setKeyIndex] = useState(-1);\n  const handleChange = (selectedOption: any) => {\n    form.setFieldValue(field.name, selectedOption);\n    setOpen(false);\n  };\n\n  const handleBlur = () => {\n    form.setFieldTouched(field.name, true);\n  };\n\n  const className = ClassName(\"batman-store-ui-select--wrapper\", {\n    \"batman-store-ui-select--disabled\": disabled,\n    \"batman-store-ui-select--error\": error,\n    \"batman-store-ui-select--gray\": selectGray,\n    [_className]: _className,\n  });\n\n  const classNameSelect = ClassName(\"batman-store-ui-select\", {\n    \"batman-store-ui-select--close\": type === \"search\",\n  });\n\n  const clearSelect = useCallback(() => {\n    if (onChange) {\n      onChange(null);\n      setOpen(true);\n    }\n    if (onChangeSearch) {\n      onChangeSearch(\"\");\n    }\n  }, [onChange, onChangeSearch]);\n\n  const changeOpen = useCallback(() => {\n    if (type === \"select\") {\n      setOpen((state) => !state);\n    }\n    if (type === \"search\") {\n      clearSelect();\n    }\n  }, [clearSelect, type]);\n\n  const handleFocus = useCallback(() => {\n    if (type === \"search\" && !value) {\n      setOpen(true);\n    }\n  }, [type, value, subType]);\n\n  // const handleBlur = useCallback(() => {\n  //   setFocus(false);\n  //\n  //   if (onBlur) {\n  //     if (index) {\n  //       onBlur(index);\n  //     }\n  //     // else {\n  //     //   onBlur();\n  //     // }\n  //   }\n  // }, [onBlur, index]);\n\n  const handleChangeSearch = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      if (onChangeSearch) {\n        onChangeSearch(e.target.value);\n      }\n    },\n    [onChangeSearch]\n  );\n\n  const handleWindow = useCallback(\n    (e: Event) => {\n      const node = select?.current;\n      const target = e.target as HTMLTextAreaElement;\n\n      if (node) {\n        if (\n          target.closest(\".batman-store-ui-select--wrapper\") !==\n            node?.closest(\".batman-store-ui-select--wrapper\") &&\n          !target.closest(\".batman-store-ui-select--close\")\n        ) {\n          setOpen(false);\n          setKeyIndex(-1);\n        }\n      }\n    },\n    [select]\n  );\n\n  const handleKey = useCallback(\n    (e: KeyboardEvent) => {\n      const maxIndex = options?.length ? options.length - 1 : 0;\n\n      const up = e.keyCode === 38;\n      const down = e.keyCode === 40;\n      const enter = e.keyCode === 13;\n      const space = e.keyCode === 32;\n      const esc = e.keyCode === 27;\n      const tab = e.keyCode === 9;\n\n      if ((open || focus) && (space || up || down)) {\n        e.preventDefault();\n      }\n\n      if (focus && !open && (space || enter)) {\n        setOpen(true);\n      }\n\n      if (open && (esc || tab)) {\n        setOpen(false);\n        setKeyIndex(-1);\n      }\n\n      if (open) {\n        if (up) {\n          setKeyIndex((state) => {\n            if (state === 0 || state === -1) {\n              return -1;\n            }\n\n            return state - 1;\n          });\n        }\n        if (down) {\n          setKeyIndex((state: number) => {\n            if (state === maxIndex) {\n              return maxIndex;\n            }\n\n            return state + 1;\n          });\n        }\n      }\n    },\n    [open, focus, options]\n  );\n  //\n  // const handleDisabledClick = useCallback(() => {\n  //   if (disabled) {\n  //     disabledClick();\n  //   }\n  // }, [disabled, disabledClick]);\n\n  useEffect(() => {\n    window.addEventListener(\"click\", handleWindow);\n    document.addEventListener(\"keydown\", handleKey);\n\n    return () => {\n      window.removeEventListener(\"click\", handleWindow);\n      document.removeEventListener(\"keydown\", handleKey);\n    };\n  }, [handleWindow, handleKey]);\n\n  useEffect(() => {\n    setKeyIndex(-1);\n  }, [options]);\n\n  useEffect(() => {\n    if (theme === \"gray-input\") {\n      if (value?.value?.trim() || searchValue?.trim() || focus) {\n        setSelectGray(false);\n      } else {\n        setSelectGray(true);\n      }\n    }\n  }, [theme, focus, value, searchValue]);\n\n  // const handleChange = useCallback(\n  //   (option: IOption) => {\n  //     if (onChange) {\n  //       onChange(option);\n  //       setOpen(false);\n  //     }\n  //   },\n  //   [onChange]\n  // );\n\n  useEffect(() => {\n    const node = select.current;\n\n    if (type === \"search\" && open && node) {\n      node.focus();\n    }\n  }, [open, type, select]);\n\n  return (\n    <div data-index={index} className={className}>\n      {type === \"select\" || (type === \"search\" && value) ? (\n        <div\n          className={classNameSelect}\n          ref={select}\n          tabIndex={1}\n          {...(!disabled\n            ? {\n                onFocus: handleFocus,\n                onBlur: handleBlur,\n                onClick: changeOpen,\n              }\n            : {})}\n        >\n          <span className=\"batman-store-ui-select--placeholder\">\n            {form?.values[valuesName]?.name}\n          </span>\n\n          {unit ? (\n            <span className=\"batman-store-ui-input--unit\">{unit}</span>\n          ) : null}\n        </div>\n      ) : type === \"search\" && !value ? (\n        <div className=\"batman-store-ui-select-flex\">\n          <input\n            className=\"batman-store-ui-select\"\n            value={searchValue}\n            onChange={handleChangeSearch}\n            // onBlur={handleBlur}\n            placeholder={placeholder}\n            ref={select}\n            tabIndex={1}\n            {...(!disabled\n              ? {\n                  onFocus: handleFocus,\n                  onBlur: handleBlur,\n                }\n              : {})}\n          />\n        </div>\n      ) : null}\n\n      {error && message ? (\n        <p className=\"batman-store-ui-select--error-message\">{message}</p>\n      ) : null}\n      <div\n        className=\"batman-store-ui-select--options\"\n        {...(!open ? { style: { display: \"none\" } } : {})}\n      >\n        {options?.length || loading ? (\n          <>\n            {options?.map((option: any, i: number) => (\n              <Option\n                key={i}\n                option={option}\n                active={i === keyIndex}\n                selected={option.code === value?.code}\n                value={field.value}\n                onChange={(selected: any) => handleChange(selected)}\n                onBlur={handleBlur}\n              />\n            ))}\n            {loading ? (\n              <div className=\"batman-store-ui-select--option batman-store-ui-select--option--loading\">\n                Loading\n              </div>\n            ) : null}\n          </>\n        ) : (\n          <div className=\"batman-store-ui-select--option\">{noOption}</div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Select;\n","/Users/cavliucigor/Desktop/batman-client/src/ui/TextArea/index.tsx",[],[],"/Users/cavliucigor/Desktop/batman-client/src/ui/NavigationList/NavigationItem/index.tsx",["194","195"],[],"/Users/cavliucigor/Desktop/batman-client/src/svg/atach.tsx",[],[],{"ruleId":"196","severity":1,"message":"197","line":1,"column":28,"nodeType":"198","messageId":"199","endLine":1,"endColumn":36},{"ruleId":"196","severity":1,"message":"200","line":17,"column":10,"nodeType":"198","messageId":"199","endLine":17,"endColumn":26},{"ruleId":"201","severity":1,"message":"202","line":61,"column":33,"nodeType":"203","messageId":"204","endLine":61,"endColumn":34,"suggestions":"205"},{"ruleId":"201","severity":1,"message":"206","line":61,"column":38,"nodeType":"203","messageId":"204","endLine":61,"endColumn":39,"suggestions":"207"},{"ruleId":"201","severity":1,"message":"202","line":61,"column":54,"nodeType":"203","messageId":"204","endLine":61,"endColumn":55,"suggestions":"208"},{"ruleId":"209","severity":1,"message":"210","line":25,"column":6,"nodeType":"211","endLine":25,"endColumn":41,"suggestions":"212"},{"ruleId":"201","severity":1,"message":"202","line":63,"column":33,"nodeType":"203","messageId":"204","endLine":63,"endColumn":34,"suggestions":"213"},{"ruleId":"201","severity":1,"message":"206","line":63,"column":38,"nodeType":"203","messageId":"204","endLine":63,"endColumn":39,"suggestions":"214"},{"ruleId":"201","severity":1,"message":"202","line":63,"column":54,"nodeType":"203","messageId":"204","endLine":63,"endColumn":55,"suggestions":"215"},{"ruleId":"196","severity":1,"message":"216","line":2,"column":10,"nodeType":"198","messageId":"199","endLine":2,"endColumn":15},{"ruleId":"209","severity":1,"message":"217","line":23,"column":6,"nodeType":"211","endLine":23,"endColumn":8,"suggestions":"218"},{"ruleId":"196","severity":1,"message":"219","line":2,"column":10,"nodeType":"198","messageId":"199","endLine":2,"endColumn":14},{"ruleId":"196","severity":1,"message":"220","line":13,"column":30,"nodeType":"198","messageId":"199","endLine":13,"endColumn":34},{"ruleId":"209","severity":1,"message":"221","line":20,"column":6,"nodeType":"211","endLine":20,"endColumn":8,"suggestions":"222"},{"ruleId":"196","severity":1,"message":"223","line":6,"column":9,"nodeType":"198","messageId":"199","endLine":6,"endColumn":19},{"ruleId":"196","severity":1,"message":"224","line":1,"column":43,"nodeType":"198","messageId":"199","endLine":1,"endColumn":52},{"ruleId":"196","severity":1,"message":"197","line":1,"column":54,"nodeType":"198","messageId":"199","endLine":1,"endColumn":62},{"ruleId":"196","severity":1,"message":"225","line":11,"column":11,"nodeType":"198","messageId":"199","endLine":11,"endColumn":22},{"ruleId":"196","severity":1,"message":"226","line":107,"column":11,"nodeType":"198","messageId":"199","endLine":107,"endColumn":22},{"ruleId":"196","severity":1,"message":"227","line":161,"column":17,"nodeType":"198","messageId":"199","endLine":161,"endColumn":25},{"ruleId":"209","severity":1,"message":"228","line":207,"column":6,"nodeType":"211","endLine":207,"endColumn":28,"suggestions":"229"},{"ruleId":"196","severity":1,"message":"197","line":2,"column":10,"nodeType":"198","messageId":"199","endLine":2,"endColumn":18},{"ruleId":"196","severity":1,"message":"220","line":11,"column":11,"nodeType":"198","messageId":"199","endLine":11,"endColumn":15},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'setAllNavigation' is defined but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["230","231"],"Unnecessary escape character: \\@.",["232","233"],["234","235"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'name'. Either include it or remove the dependency array.","ArrayExpression",["236"],["237","238"],["239","240"],["241","242"],"'Input' is defined but never used.","React Hook useEffect has a missing dependency: 'setAllCategory'. Either include it or remove the dependency array. If 'setAllCategory' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["243"],"'Link' is defined but never used.","'code' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setAllNavigation'. Either include it or remove the dependency array. If 'setAllNavigation' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["244"],"'getAllUser' is defined but never used.","'useEffect' is defined but never used.","'IOptionType' is defined but never used.","'ISelectType' is defined but never used.","'setFocus' is assigned a value but never used.","React Hook useCallback has an unnecessary dependency: 'subType'. Either exclude it or remove the dependency array.",["245"],{"messageId":"246","fix":"247","desc":"248"},{"messageId":"249","fix":"250","desc":"251"},{"messageId":"246","fix":"252","desc":"248"},{"messageId":"249","fix":"253","desc":"251"},{"messageId":"246","fix":"254","desc":"248"},{"messageId":"249","fix":"255","desc":"251"},{"desc":"256","fix":"257"},{"messageId":"246","fix":"258","desc":"248"},{"messageId":"249","fix":"259","desc":"251"},{"messageId":"246","fix":"260","desc":"248"},{"messageId":"249","fix":"261","desc":"251"},{"messageId":"246","fix":"262","desc":"248"},{"messageId":"249","fix":"263","desc":"251"},{"desc":"264","fix":"265"},{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},"removeEscape",{"range":"270","text":"271"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"272","text":"273"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"274","text":"271"},{"range":"275","text":"273"},{"range":"276","text":"271"},{"range":"277","text":"273"},"Update the dependencies array to be: [getAllProduct, location.pathname, name]",{"range":"278","text":"279"},{"range":"280","text":"271"},{"range":"281","text":"273"},{"range":"282","text":"271"},{"range":"283","text":"273"},{"range":"284","text":"271"},{"range":"285","text":"273"},"Update the dependencies array to be: [setAllCategory]",{"range":"286","text":"287"},"Update the dependencies array to be: [setAllNavigation]",{"range":"288","text":"289"},"Update the dependencies array to be: [type, value]",{"range":"290","text":"291"},[1604,1605],"",[1604,1604],"\\",[1609,1610],[1609,1609],[1625,1626],[1625,1625],[702,737],"[getAllProduct, location.pathname, name]",[1585,1586],[1585,1585],[1590,1591],[1590,1590],[1606,1607],[1606,1606],[680,682],"[setAllCategory]",[603,605],"[setAllNavigation]",[4796,4818],"[type, value]"]