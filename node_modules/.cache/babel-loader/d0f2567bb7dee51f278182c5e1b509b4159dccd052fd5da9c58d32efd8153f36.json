{"ast":null,"code":"var _jsxFileName = \"/Users/cavliucigor/Desktop/batman-client/src/Companent/Product/index.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport { MainTitle, ProductCard } from \"../../ui\";\nimport { getAllProduct } from \"../../Redux/Products/productSlice\";\nimport { getAllProducts } from \"../../server\";\nimport \"./style/index.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst Product = _ref => {\n  _s();\n  let {\n    items,\n    getAllProduct,\n    name\n  } = _ref;\n  const location = useLocation();\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await getAllProducts(name);\n      getAllProduct(res);\n    };\n    fetchData();\n  }, [getAllProduct, location === null || location === void 0 ? void 0 : location.pathname]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"batman-store_product-list\",\n    children: [/*#__PURE__*/_jsxDEV(MainTitle, {\n      children: ` According to your request, we found the following ${name === null || name === void 0 ? void 0 : name.toUpperCase()}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"batman-store_product-list-wrapper\",\n      children: items === null || items === void 0 ? void 0 : items.map((item, i) => {\n        return /*#__PURE__*/_createElement(ProductCard, {\n          ...item,\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 18\n          }\n        });\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Product, \"BXcZrDMM76mmm4zA8/QV5UbMNXE=\", false, function () {\n  return [useLocation];\n});\n_c = Product;\nconst mapStateToProps = state => {\n  var _state$productSlice;\n  return {\n    items: state === null || state === void 0 ? void 0 : (_state$productSlice = state.productSlice) === null || _state$productSlice === void 0 ? void 0 : _state$productSlice.items\n  };\n};\nexport default connect(mapStateToProps, {\n  getAllProduct\n})(Product);\nvar _c;\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"names":["useEffect","connect","useLocation","MainTitle","ProductCard","getAllProduct","getAllProducts","Product","items","name","location","fetchData","res","pathname","toUpperCase","map","item","i","mapStateToProps","state","productSlice"],"sources":["/Users/cavliucigor/Desktop/batman-client/src/Companent/Product/index.tsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport { MainTitle, ProductCard } from \"../../ui\";\nimport { getAllProduct } from \"../../Redux/Products/productSlice\";\nimport { IProduct } from \"../../type\";\nimport { getAllProducts } from \"../../server\";\nimport \"./style/index.scss\";\n\ninterface Props {\n  items: IProduct[];\n  getAllProduct: (e: any) => void;\n  name: string;\n}\n\nconst Product = ({ items, getAllProduct, name }: Props) => {\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await getAllProducts(name);\n      getAllProduct(res);\n    };\n    fetchData();\n  }, [getAllProduct, location?.pathname]);\n\n  return (\n    <div className=\"batman-store_product-list\">\n      <MainTitle>{` According to your request, we found the following ${name?.toUpperCase()}`}</MainTitle>\n      <div className=\"batman-store_product-list-wrapper\">\n        {items?.map((item, i) => {\n          return <ProductCard {...item} key={i} />;\n        })}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: any) => ({\n  items: state?.productSlice?.items,\n});\n\nexport default connect(mapStateToProps, { getAllProduct })(Product);\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,EAAEC,WAAW,QAAQ,UAAU;AACjD,SAASC,aAAa,QAAQ,mCAAmC;AAEjE,SAASC,cAAc,QAAQ,cAAc;AAC7C,OAAO,oBAAoB;AAAC;AAAA;AAQ5B,MAAMC,OAAO,GAAG,QAA2C;EAAA;EAAA,IAA1C;IAAEC,KAAK;IAAEH,aAAa;IAAEI;EAAY,CAAC;EACpD,MAAMC,QAAQ,GAAGR,WAAW,EAAE;EAE9BF,SAAS,CAAC,MAAM;IACd,MAAMW,SAAS,GAAG,YAAY;MAC5B,MAAMC,GAAG,GAAG,MAAMN,cAAc,CAACG,IAAI,CAAC;MACtCJ,aAAa,CAACO,GAAG,CAAC;IACpB,CAAC;IACDD,SAAS,EAAE;EACb,CAAC,EAAE,CAACN,aAAa,EAAEK,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEG,QAAQ,CAAC,CAAC;EAEvC,oBACE;IAAK,SAAS,EAAC,2BAA2B;IAAA,wBACxC,QAAC,SAAS;MAAA,UAAG,sDAAqDJ,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEK,WAAW,EAAG;IAAC;MAAA;MAAA;MAAA;IAAA,QAAa,eACpG;MAAK,SAAS,EAAC,mCAAmC;MAAA,UAC/CN,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEO,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,KAAK;QACvB,oBAAO,eAAC,WAAW;UAAA,GAAKD,IAAI;UAAE,GAAG,EAAEC,CAAE;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAAG;MAC1C,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACE;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,GArBIV,OAAO;EAAA,QACML,WAAW;AAAA;AAAA,KADxBK,OAAO;AAuBb,MAAMW,eAAe,GAAIC,KAAU;EAAA;EAAA,OAAM;IACvCX,KAAK,EAAEW,KAAK,aAALA,KAAK,8CAALA,KAAK,CAAEC,YAAY,wDAAnB,oBAAqBZ;EAC9B,CAAC;AAAA,CAAC;AAEF,eAAeP,OAAO,CAACiB,eAAe,EAAE;EAAEb;AAAc,CAAC,CAAC,CAACE,OAAO,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}