{"ast":null,"code":"var _jsxFileName = \"/Users/cavliucigor/Desktop/batman-client/src/ui/InputMedia/index.js\";\nimport Compressor from \"compressorjs\";\nimport \"./style/index.scss\";\nimport Atach from \"../../svg/atach.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputMedia = _ref => {\n  var _ref2, _ref3;\n  let {\n    field,\n    form,\n    valuesName\n  } = _ref;\n  const convertBase64 = file => {\n    return new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsDataURL(file);\n      fileReader.onload = () => {\n        resolve(fileReader.result);\n      };\n      fileReader.onerror = error => {\n        reject(error);\n      };\n    });\n  };\n  const handleChange = e => {\n    const files = Array.from(e.target.files);\n    if (files.length > 0) {\n      const promises = files.map(file => new Promise((resolve, reject) => {\n        new Compressor(file, {\n          quality: 0.3,\n          success: compressedFile => {\n            convertBase64(compressedFile).then(base64 => {\n              resolve(base64);\n            });\n          },\n          error: error => {\n            reject(error);\n          }\n        });\n      }));\n      Promise.all(promises).then(base64Array => {\n        const updatedArray = [...base64Array, ...field.value];\n        form.setFieldValue(field.name, updatedArray.slice(0, 10));\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n  };\n  const changeRemove = files => {\n    var _field$value;\n    form.setFieldValue(field.name, (_field$value = field.value) === null || _field$value === void 0 ? void 0 : _field$value.filter(item => item !== files));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"agent-store--ui-input-media-wallpaper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"agent-store--ui-input-media\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Import a photo image\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [(_ref2 = Array.isArray(field === null || field === void 0 ? void 0 : field.value) ? field.value : []) === null || _ref2 === void 0 ? void 0 : _ref2.length, \" / 10\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"*Attention! You need to insert from 1 to 10 images. The image format is Png or Jpg. The file size must not exceed 10 MB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"agent-store--ui-input-media-attachment\",\n        children: [((_ref3 = Array.isArray(field === null || field === void 0 ? void 0 : field.value) ? field.value : []) === null || _ref3 === void 0 ? void 0 : _ref3.length) < 10 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"agent-store--ui-input-media__add-block\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*, .png, .jpg\",\n            onChange: handleChange,\n            multiple: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Atach, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"agent-store-ui-input-media-list_input-block-img-list\",\n          children: (Array.isArray(field === null || field === void 0 ? void 0 : field.value) ? field.value : []).map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"agent-store-ui-input-media-list_input-block-img-list-block\",\n            onClick: () => changeRemove(item),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: item,\n              alt: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_c = InputMedia;\nexport default InputMedia;\nvar _c;\n$RefreshReg$(_c, \"InputMedia\");","map":{"version":3,"names":["Compressor","Atach","InputMedia","field","form","valuesName","convertBase64","file","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","result","onerror","error","handleChange","e","files","Array","from","target","length","promises","map","quality","success","compressedFile","then","base64","all","base64Array","updatedArray","value","setFieldValue","name","slice","catch","console","changeRemove","filter","item","isArray","i"],"sources":["/Users/cavliucigor/Desktop/batman-client/src/ui/InputMedia/index.js"],"sourcesContent":["import Compressor from \"compressorjs\";\n\nimport \"./style/index.scss\";\nimport Atach from \"../../svg/atach.tsx\";\n\nconst InputMedia = ({ field, form, valuesName }) => {\n  const convertBase64 = (file) => {\n    return new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsDataURL(file);\n\n      fileReader.onload = () => {\n        resolve(fileReader.result);\n      };\n\n      fileReader.onerror = (error) => {\n        reject(error);\n      };\n    });\n  };\n\n  const handleChange = (e) => {\n    const files = Array.from(e.target.files);\n\n    if (files.length > 0) {\n      const promises = files.map(\n        (file) =>\n          new Promise((resolve, reject) => {\n            new Compressor(file, {\n              quality: 0.3,\n              success: (compressedFile) => {\n                convertBase64(compressedFile).then((base64) => {\n                  resolve(base64);\n                });\n              },\n              error: (error) => {\n                reject(error);\n              },\n            });\n          })\n      );\n\n      Promise.all(promises)\n        .then((base64Array) => {\n          const updatedArray = [...base64Array, ...field.value];\n          form.setFieldValue(field.name, updatedArray.slice(0, 10));\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    }\n  };\n\n  const changeRemove = (files) => {\n    form.setFieldValue(\n      field.name,\n      field.value?.filter((item) => item !== files)\n    );\n  };\n\n  return (\n    <div className=\"agent-store--ui-input-media-wallpaper\">\n      <div className=\"agent-store--ui-input-media\">\n        <h4>\n          Import a photo image{\" \"}\n          <span>\n            {(Array.isArray(field?.value) ? field.value : [])?.length} / 10\n          </span>\n        </h4>\n        <p>\n          *Attention! You need to insert from 1 to 10 images. The image format\n          is Png or Jpg. The file size must not exceed 10 MB\n        </p>\n\n        <div className=\"agent-store--ui-input-media-attachment\">\n          {(Array.isArray(field?.value) ? field.value : [])?.length < 10 ? (\n            <div className=\"agent-store--ui-input-media__add-block\">\n              <input\n                type=\"file\"\n                accept=\"image/*, .png, .jpg\"\n                onChange={handleChange}\n                multiple\n              />\n              <Atach />\n            </div>\n          ) : null}\n\n          <div className=\"agent-store-ui-input-media-list_input-block-img-list\">\n            {(Array.isArray(field?.value) ? field.value : []).map((item, i) => (\n              <div\n                key={i}\n                className=\"agent-store-ui-input-media-list_input-block-img-list-block\"\n                onClick={() => changeRemove(item)}\n              >\n                <img src={item} alt=\"icon\" />\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default InputMedia;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}