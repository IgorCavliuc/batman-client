{"ast":null,"code":"var _jsxFileName = \"/Users/cavliucigor/Desktop/batman-client/src/Companent/SignIn/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback } from \"react\";\nimport \"./SignIn.scss\";\nimport { Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { connect } from \"react-redux\";\nimport { getAllUser } from \"../../Redux/User/userSlice\";\nimport { getUser } from \"../../server\";\nimport { Button } from \"../../ui\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AsigAdmin = require(\"../ico/mainlogo.png\");\nconst SignIn = _ref => {\n  _s();\n  let {\n    getAllUser\n  } = _ref;\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    mode: \"onChange\"\n  });\n  const onSubmit = useCallback(async data => {\n    try {\n      const res = await getUser(data === null || data === void 0 ? void 0 : data.login, data === null || data === void 0 ? void 0 : data.password);\n      getAllUser(res);\n      const dataUser = {\n        login: data === null || data === void 0 ? void 0 : data.login,\n        password: data === null || data === void 0 ? void 0 : data.password,\n        expires: new Date().getTime() + 5000\n      };\n      if (!sessionStorage.getItem(\"users\")) {\n        sessionStorage.setItem(\"users\", JSON.stringify(dataUser));\n        window.location.href = \"/\";\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }, [getAllUser]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"batman-ui--sign-in-content content \",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      className: \"batman-ui--form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ...register(\"login\", {\n          required: \"Login is a required field!\",\n          pattern: {\n            value: /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/,\n            message: \"Please enter a valid login.\"\n          }\n        }),\n        type: \"login\",\n        placeholder: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), (errors === null || errors === void 0 ? void 0 : errors.login) && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"#3a48f5\"\n        },\n        children: [\"*\", errors.login.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ...register(\"password\", {\n          required: \"Password is a required field!\",\n          pattern: {\n            value: /(?=.*[0-9])(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z!@#$%^&*]{6,}/g,\n            message: \"Please enter a valid password. It should contain at least one number, one special character, at least one Latin letter in lower case, at least one uppercase Latin letter, and should consist of at least 6 of the above.\"\n          }\n        }),\n        type: \"password\",\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), (errors === null || errors === void 0 ? void 0 : errors.password) && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"#3a48f5\"\n        },\n        children: [\"*\", errors.password.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"batman-ui--submit-button\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signup\",\n          children: \" Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"batman-ui--sign-in-image\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: AsigAdmin,\n        alt: \"AsigAdmin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(SignIn, \"iEq+NBpSGKatuSOxom8tsGUbjd4=\", false, function () {\n  return [useForm];\n});\n_c = SignIn;\nconst mapStateToProps = state => ({\n  user: state === null || state === void 0 ? void 0 : state.userSlice\n});\nexport default connect(mapStateToProps, {\n  getAllUser\n})(SignIn);\nvar _c;\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"names":["React","useCallback","Link","useForm","connect","getAllUser","getUser","Button","AsigAdmin","require","SignIn","register","handleSubmit","formState","errors","mode","onSubmit","data","res","login","password","dataUser","expires","Date","getTime","sessionStorage","getItem","setItem","JSON","stringify","window","location","href","error","console","required","pattern","value","message","color","mapStateToProps","state","user","userSlice"],"sources":["/Users/cavliucigor/Desktop/batman-client/src/Companent/SignIn/index.tsx"],"sourcesContent":["import React, { useCallback } from \"react\";\nimport \"./SignIn.scss\";\nimport { Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { connect } from \"react-redux\";\nimport { getAllUser } from \"../../Redux/User/userSlice\";\nimport { getUser } from \"../../server\";\nimport { Button } from \"../../ui\";\nconst AsigAdmin = require(\"../ico/mainlogo.png\");\n\ntype FormValues = {\n  login: string;\n  password: string;\n};\n\ntype SignInProps = {\n  getAllUser: (res: any) => void;\n};\n\nconst SignIn: React.FC<SignInProps> = ({ getAllUser }) => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<FormValues>({\n    mode: \"onChange\",\n  });\n\n  const onSubmit = useCallback(\n    async (data: FormValues) => {\n      try {\n        const res = await getUser(data?.login, data?.password);\n        getAllUser(res);\n\n        const dataUser = {\n          login: data?.login,\n          password: data?.password,\n          expires: new Date().getTime() + 5000,\n        };\n\n        if (!sessionStorage.getItem(\"users\")) {\n          sessionStorage.setItem(\"users\", JSON.stringify(dataUser));\n          window.location.href = \"/\";\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    [getAllUser]\n  );\n\n  return (\n    <div className=\"batman-ui--sign-in-content content \">\n      <form onSubmit={handleSubmit(onSubmit)} className=\"batman-ui--form\">\n        <h1>Sign In</h1>\n        <input\n          {...register(\"login\", {\n            required: \"Login is a required field!\",\n            pattern: {\n              value:\n                /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/,\n              message: \"Please enter a valid login.\",\n            },\n          })}\n          type=\"login\"\n          placeholder=\"Login\"\n        />\n        {errors?.login && (\n          <div style={{ color: \"#3a48f5\" }}>*{errors.login.message}</div>\n        )}\n        <input\n          {...register(\"password\", {\n            required: \"Password is a required field!\",\n            pattern: {\n              value:\n                /(?=.*[0-9])(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z!@#$%^&*]{6,}/g,\n              message:\n                \"Please enter a valid password. It should contain at least one number, one special character, at least one Latin letter in lower case, at least one uppercase Latin letter, and should consist of at least 6 of the above.\",\n            },\n          })}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        {errors?.password && (\n          <div style={{ color: \"#3a48f5\" }}>*{errors.password.message}</div>\n        )}\n        <div className=\"batman-ui--submit-button\">\n          <Button children=\"Submit\" />\n          <Link to=\"/signup\"> Sign Up</Link>\n        </div>\n      </form>\n      <div className=\"batman-ui--sign-in-image\">\n        <img src={AsigAdmin} alt=\"AsigAdmin\" />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: any) => ({\n  user: state?.userSlice,\n});\n\nexport default connect(mapStateToProps, { getAllUser })(SignIn);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}